name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    defaults:
      run:
        working-directory: ./OTSServer
    strategy:
      matrix:
        configuration: [Debug, Release]
        solution: [OTSServer/OTSServer.sln]

    runs-on: windows-latest
                             
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=Release
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Build SDK
      run: dotnet build OTSSDK/OTSSDK.csproj --no-restore --configuration $env:Configuration

    - name: Build Device Info Plugin
      run: dotnet build OTSDeviceInfo/OTSStdLibDeviceInfo.csproj --no-restore --configuration $env:Configuration

    - name: Build Math Plugin
      run: dotnet build OTSPluginMath/OTSStdMath.csproj --no-restore --configuration $env:Configuration

    - name: Build Monitor Plugin
      run: dotnet build OTSStdMonitor/OTSStdMonitor.csproj --no-restore --configuration $env:Configuration

    - name: Build Provider Plugin
      run: dotnet build OTSStdProvider/OTSStdProvider.csproj --no-restore --configuration $env:Configuration

    - name: Build Logic Plugin
      run: dotnet build OTSStdLogic/OTSStdLogic.csproj --no-restore --configuration $env:Configuration

    - name: Build Common library
      run: dotnet build OTSCommon/OTSCommon.csproj --no-restore --configuration $env:Configuration

    - name: Build Runner library
      run: dotnet build OTSRunner/OTSRunner.csproj --no-restore --configuration $env:Configuration

    - name: Build Tests
      run: dotnet build OTSTests/OTSTests.csproj --no-restore --configuration $env:Configuration

    - name: Copy Plugins
      shell: pwsh
      run: |
        ./copyPlugins.ps1

     #Execute all unit tests in the solution
    - name: Execute unit tests
      if: ${{ matrix.configuration }} == Debug
      run: dotnet test
    
    #- name: Copy plugins
    #  run: |
    #    mkdir -p 
    
    # Restore the application to populate the obj folder with RuntimeIdentifiers
    #- name: Restore the application
    #  run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
    #  env:
    #    Configuration: ${{ matrix.configuration }}

